This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by configure, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ /Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/src/gcc/configure --build=aarch64-build_apple-darwin21.2.0 --host=aarch64-build_apple-darwin21.2.0 --target=arm-cortexm4f-eabi --prefix=/usr/local/arm-none-eabi --exec_prefix=/usr/local/arm-none-eabi/newlib-nano --with-local-prefix=/usr/local/arm-none-eabi/arm-cortexm4f-eabi --with-headers=/usr/local/arm-none-eabi/arm-cortexm4f-eabi/include --with-headers=/usr/local/arm-none-eabi/newlib-nano/include --with-newlib --enable-threads=no --disable-shared --with-cpu=cortex-m4 --with-fpu=fpv4-sp-d16 --with-float=hard --enable-__cxa_atexit --enable-cxx-flags=-Os -fexceptions -fasynchronous-unwind-tables -ffunction-sections -fdata-sections -fsingle-precision-constant -flto -ffat-lto-objects --disable-libgomp --disable-libmudflap --disable-libmpx --disable-libquadmath --disable-libquadmath-support --with-gmp=/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools --with-mpfr=/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools --with-mpc=/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools --with-isl=/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools --enable-lto --enable-target-optspace --disable-libstdcxx-pch --enable-decimal-float=no --disable-nls --disable-multilib --enable-languages=c,c++ --with-mode=thumb --disable-libstdcxx-verbose

## --------- ##
## Platform. ##
## --------- ##

hostname = mbp-ts.fritz.box
uname -m = arm64
uname -r = 21.2.0
uname -s = Darwin
uname -v = Darwin Kernel Version 21.2.0: Sun Nov 28 20:28:41 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T6000

/usr/bin/uname -p = arm
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 21.2.0: Sun Nov 28 20:28:41 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T6000
Kernel configured for up to 10 processors.
10 processors are physically available.
10 processors are logically available.
Processor type: arm64e (ARM64E)
Processors active: 0 1 2 3 4 5 6 7 8 9
Primary memory available: 32.00 gigabytes
Default processor set: 711 tasks, 3951 threads, 10 processors
Load average: 5.11, Mach factor: 4.90
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/arm-none-eabi/bin
PATH: /Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/bin
PATH: /Volumes/Toolchain/arm-none-eabi/build/tools/bin
PATH: /opt/homebrew/opt/bison/bin/
PATH: /opt/homebrew/opt/ncurses/bin
PATH: /opt/homebrew/opt/texinfo/bin
PATH: /opt/homebrew/bin
PATH: /opt/homebrew/sbin
PATH: /usr/local/bin
PATH: /usr/bin
PATH: /bin
PATH: /usr/sbin
PATH: /sbin
PATH: /Applications/VMware Fusion Tech Preview.app/Contents/Public
PATH: /Library/TeX/texbin
PATH: /usr/local/MacGPG2/bin
PATH: /Applications/Little Snitch.app/Contents/Components
PATH: /opt/X11/bin
PATH: /Library/Apple/usr/bin
PATH: /Users/ts/.platformio/penv/bin
PATH: /Users/ts/usr/local/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2358: checking build system type
configure:2372: result: aarch64-build_apple-darwin21.2.0
configure:2419: checking host system type
configure:2432: result: aarch64-build_apple-darwin21.2.0
configure:2452: checking target system type
configure:2465: result: arm-cortexm4f-eabi
configure:2519: checking for a BSD-compatible install
configure:2587: result: /Volumes/Toolchain/arm-none-eabi/build/tools/bin/install -c
configure:2598: checking whether ln works
configure:2620: result: yes
configure:2624: checking whether ln -s works
configure:2628: result: yes
configure:2635: checking for a sed that does not truncate output
configure:2699: result: /Volumes/Toolchain/arm-none-eabi/build/tools/bin/sed
configure:2708: checking for gawk
configure:2724: found /opt/homebrew/bin/gawk
configure:2735: result: gawk
configure:3229: checking for libatomic support
configure:3235: result: no
configure:3267: checking for libitm support
configure:3273: result: no
configure:3286: checking for libsanitizer support
configure:3292: result: no
configure:3305: checking for libvtv support
configure:3311: result: no
configure:3325: checking for libhsail-rt support
configure:3331: result: no
configure:3458: checking for libphobos support
configure:3464: result: no
configure:4129: checking for aarch64-build_apple-darwin21.2.0-gcc
configure:4145: found /Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/bin/aarch64-build_apple-darwin21.2.0-gcc
configure:4156: result: aarch64-build_apple-darwin21.2.0-gcc
configure:4425: checking for C compiler version
configure:4434: aarch64-build_apple-darwin21.2.0-gcc --version >&5
Apple clang version 13.0.0 (clang-1300.0.29.30)
Target: arm64-apple-darwin21.2.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
configure:4445: $? = 0
configure:4434: aarch64-build_apple-darwin21.2.0-gcc -v >&5
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 13.0.0 (clang-1300.0.29.30)
Target: arm64-apple-darwin21.2.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:4445: $? = 0
configure:4434: aarch64-build_apple-darwin21.2.0-gcc -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:4445: $? = 1
configure:4434: aarch64-build_apple-darwin21.2.0-gcc -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:4445: $? = 1
configure:4465: checking whether the C compiler works
configure:4487: aarch64-build_apple-darwin21.2.0-gcc -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512  -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/opt/homebrew/lib  -framework CoreFoundation -lstdc++ -lm conftest.c  >&5
configure:4491: $? = 0
configure:4539: result: yes
configure:4542: checking for C compiler default output file name
configure:4544: result: a.out
configure:4550: checking for suffix of executables
configure:4557: aarch64-build_apple-darwin21.2.0-gcc -o conftest -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512  -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/opt/homebrew/lib  -framework CoreFoundation -lstdc++ -lm conftest.c  >&5
configure:4561: $? = 0
configure:4583: result: 
configure:4605: checking whether we are cross compiling
configure:4613: aarch64-build_apple-darwin21.2.0-gcc -o conftest -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512  -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/opt/homebrew/lib  -framework CoreFoundation -lstdc++ -lm conftest.c  >&5
configure:4617: $? = 0
configure:4624: ./conftest
configure:4628: $? = 0
configure:4643: result: no
configure:4648: checking for suffix of object files
configure:4670: aarch64-build_apple-darwin21.2.0-gcc -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512  conftest.c >&5
configure:4674: $? = 0
configure:4695: result: o
configure:4699: checking whether we are using the GNU C compiler
configure:4718: aarch64-build_apple-darwin21.2.0-gcc -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512  conftest.c >&5
configure:4718: $? = 0
configure:4727: result: yes
configure:4736: checking whether aarch64-build_apple-darwin21.2.0-gcc accepts -g
configure:4756: aarch64-build_apple-darwin21.2.0-gcc -c -g  conftest.c >&5
configure:4756: $? = 0
configure:4797: result: yes
configure:4814: checking for aarch64-build_apple-darwin21.2.0-gcc option to accept ISO C89
configure:4877: aarch64-build_apple-darwin21.2.0-gcc  -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512  conftest.c >&5
configure:4877: $? = 0
configure:4890: result: none needed
configure:4924: checking for aarch64-build_apple-darwin21.2.0-g++
configure:4940: found /Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/bin/aarch64-build_apple-darwin21.2.0-g++
configure:4951: result: aarch64-build_apple-darwin21.2.0-g++
configure:5022: checking for C++ compiler version
configure:5031: aarch64-build_apple-darwin21.2.0-g++ --version >&5
Apple clang version 13.0.0 (clang-1300.0.29.30)
Target: arm64-apple-darwin21.2.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
configure:5042: $? = 0
configure:5031: aarch64-build_apple-darwin21.2.0-g++ -v >&5
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 13.0.0 (clang-1300.0.29.30)
Target: arm64-apple-darwin21.2.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:5042: $? = 0
configure:5031: aarch64-build_apple-darwin21.2.0-g++ -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:5042: $? = 1
configure:5031: aarch64-build_apple-darwin21.2.0-g++ -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:5042: $? = 1
configure:5046: checking whether we are using the GNU C++ compiler
configure:5065: aarch64-build_apple-darwin21.2.0-g++ -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512   conftest.cpp >&5
configure:5065: $? = 0
configure:5074: result: yes
configure:5083: checking whether aarch64-build_apple-darwin21.2.0-g++ accepts -g
configure:5103: aarch64-build_apple-darwin21.2.0-g++ -c -g  conftest.cpp >&5
configure:5103: $? = 0
configure:5144: result: yes
configure:5193: checking whether g++ accepts -static-libstdc++ -static-libgcc
configure:5210: aarch64-build_apple-darwin21.2.0-g++ -o conftest -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512   -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/opt/homebrew/lib  -framework CoreFoundation -lstdc++ -lm -static-libstdc++ -static-libgcc conftest.cpp  >&5
clang: error: unsupported option '-static-libgcc'
configure:5210: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| 
| #if (__GNUC__ < 4) || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)
| #error -static-libstdc++ not implemented
| #endif
| int main() {}
configure:5214: result: no
configure:5235: checking for aarch64-build_apple-darwin21.2.0-gnatbind
configure:5265: result: no
configure:5275: checking for gnatbind
configure:5305: result: no
configure:5327: checking for aarch64-build_apple-darwin21.2.0-gnatmake
configure:5357: result: no
configure:5367: checking for gnatmake
configure:5397: result: no
configure:5416: checking whether compiler driver understands Ada
configure:5439: result: no
configure:5448: checking how to compare bootstrapped objects
configure:5473: result: cmp --ignore-initial=16 $$f1 $$f2
configure:5540: checking whether aarch64-build_apple-darwin21.2.0-g++ supports C++11 features by default
configure:5836: aarch64-build_apple-darwin21.2.0-g++ -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512   conftest.cpp >&5
conftest.cpp:20:2: error: "This is not a C++11 compiler"
#error "This is not a C++11 compiler"
 ^
1 error generated.
configure:5836: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| 
| 
| // If the compiler admits that it is not ready for C++11, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201103L
| 
| #error "This is not a C++11 compiler"
| 
| #else
| 
| namespace cxx11
| {
| 
|   namespace test_static_assert
|   {
| 
|     template <typename T>
|     struct check
|     {
|       static_assert(sizeof(int) <= sizeof(T), "not big enough");
|     };
| 
|   }
| 
|   namespace test_final_override
|   {
| 
|     struct Base
|     {
|       virtual ~Base() {}
|       virtual void f() {}
|     };
| 
|     struct Derived : public Base
|     {
|       virtual ~Derived() override {}
|       virtual void f() override {}
|     };
| 
|   }
| 
|   namespace test_double_right_angle_brackets
|   {
| 
|     template < typename T >
|     struct check {};
| 
|     typedef check<void> single_type;
|     typedef check<check<void>> double_type;
|     typedef check<check<check<void>>> triple_type;
|     typedef check<check<check<check<void>>>> quadruple_type;
| 
|   }
| 
|   namespace test_decltype
|   {
| 
|     int
|     f()
|     {
|       int a = 1;
|       decltype(a) b = 2;
|       return a + b;
|     }
| 
|   }
| 
|   namespace test_type_deduction
|   {
| 
|     template < typename T1, typename T2 >
|     struct is_same
|     {
|       static const bool value = false;
|     };
| 
|     template < typename T >
|     struct is_same<T, T>
|     {
|       static const bool value = true;
|     };
| 
|     template < typename T1, typename T2 >
|     auto
|     add(T1 a1, T2 a2) -> decltype(a1 + a2)
|     {
|       return a1 + a2;
|     }
| 
|     int
|     test(const int c, volatile int v)
|     {
|       static_assert(is_same<int, decltype(0)>::value == true, "");
|       static_assert(is_same<int, decltype(c)>::value == false, "");
|       static_assert(is_same<int, decltype(v)>::value == false, "");
|       auto ac = c;
|       auto av = v;
|       auto sumi = ac + av + 'x';
|       auto sumf = ac + av + 1.0;
|       static_assert(is_same<int, decltype(ac)>::value == true, "");
|       static_assert(is_same<int, decltype(av)>::value == true, "");
|       static_assert(is_same<int, decltype(sumi)>::value == true, "");
|       static_assert(is_same<int, decltype(sumf)>::value == false, "");
|       static_assert(is_same<int, decltype(add(c, v))>::value == true, "");
|       return (sumf > 0.0) ? sumi : add(c, v);
|     }
| 
|   }
| 
|   namespace test_noexcept
|   {
| 
|     int f() { return 0; }
|     int g() noexcept { return 0; }
| 
|     static_assert(noexcept(f()) == false, "");
|     static_assert(noexcept(g()) == true, "");
| 
|   }
| 
|   namespace test_constexpr
|   {
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c_r(const CharT *const s, const unsigned long acc) noexcept
|     {
|       return *s ? strlen_c_r(s + 1, acc + 1) : acc;
|     }
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c(const CharT *const s) noexcept
|     {
|       return strlen_c_r(s, 0UL);
|     }
| 
|     static_assert(strlen_c("") == 0UL, "");
|     static_assert(strlen_c("1") == 1UL, "");
|     static_assert(strlen_c("example") == 7UL, "");
|     static_assert(strlen_c("another\0example") == 7UL, "");
| 
|   }
| 
|   namespace test_rvalue_references
|   {
| 
|     template < int N >
|     struct answer
|     {
|       static constexpr int value = N;
|     };
| 
|     answer<1> f(int&)       { return answer<1>(); }
|     answer<2> f(const int&) { return answer<2>(); }
|     answer<3> f(int&&)      { return answer<3>(); }
| 
|     void
|     test()
|     {
|       int i = 0;
|       const int c = 0;
|       static_assert(decltype(f(i))::value == 1, "");
|       static_assert(decltype(f(c))::value == 2, "");
|       static_assert(decltype(f(0))::value == 3, "");
|     }
| 
|   }
| 
|   namespace test_uniform_initialization
|   {
| 
|     struct test
|     {
|       static const int zero {};
|       static const int one {1};
|     };
| 
|     static_assert(test::zero == 0, "");
|     static_assert(test::one == 1, "");
| 
|   }
| 
|   namespace test_lambdas
|   {
| 
|     void
|     test1()
|     {
|       auto lambda1 = [](){};
|       auto lambda2 = lambda1;
|       lambda1();
|       lambda2();
|     }
| 
|     int
|     test2()
|     {
|       auto a = [](int i, int j){ return i + j; }(1, 2);
|       auto b = []() -> int { return '0'; }();
|       auto c = [=](){ return a + b; }();
|       auto d = [&](){ return c; }();
|       auto e = [a, &b](int x) mutable {
|         const auto identity = [](int y){ return y; };
|         for (auto i = 0; i < a; ++i)
|           a += b--;
|         return x + identity(a + b);
|       }(0);
|       return a + b + c + d + e;
|     }
| 
|     int
|     test3()
|     {
|       const auto nullary = [](){ return 0; };
|       const auto unary = [](int x){ return x; };
|       using nullary_t = decltype(nullary);
|       using unary_t = decltype(unary);
|       const auto higher1st = [](nullary_t f){ return f(); };
|       const auto higher2nd = [unary](nullary_t f1){
|         return [unary, f1](unary_t f2){ return f2(unary(f1())); };
|       };
|       return higher1st(nullary) + higher2nd(nullary)(unary);
|     }
| 
|   }
| 
|   namespace test_variadic_templates
|   {
| 
|     template <int...>
|     struct sum;
| 
|     template <int N0, int... N1toN>
|     struct sum<N0, N1toN...>
|     {
|       static constexpr auto value = N0 + sum<N1toN...>::value;
|     };
| 
|     template <>
|     struct sum<>
|     {
|       static constexpr auto value = 0;
|     };
| 
|     static_assert(sum<>::value == 0, "");
|     static_assert(sum<1>::value == 1, "");
|     static_assert(sum<23>::value == 23, "");
|     static_assert(sum<1, 2>::value == 3, "");
|     static_assert(sum<5, 5, 11>::value == 21, "");
|     static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, "");
| 
|   }
| 
|   // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae
|   // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function
|   // because of this.
|   namespace test_template_alias_sfinae
|   {
| 
|     struct foo {};
| 
|     template<typename T>
|     using member = typename T::member_type;
| 
|     template<typename T>
|     void func(...) {}
| 
|     template<typename T>
|     void func(member<T>*) {}
| 
|     void test();
| 
|     void test() { func<foo>(0); }
| 
|   }
| 
| }  // namespace cxx11
| 
| #endif  // __cplusplus >= 201103L
| 
| 
| 
configure:5843: result: no
configure:5853: checking whether aarch64-build_apple-darwin21.2.0-g++ supports C++11 features with -std=gnu++11
configure:6151: aarch64-build_apple-darwin21.2.0-g++ -std=gnu++11 -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512   conftest.cpp >&5
configure:6151: $? = 0
configure:6160: result: yes
configure:7532: checking for objdir
configure:7547: result: .libs
configure:7718: checking for the correct version of gmp.h
configure:7738: aarch64-build_apple-darwin21.2.0-gcc -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512 -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include   conftest.c >&5
configure:7738: $? = 0
configure:7756: aarch64-build_apple-darwin21.2.0-gcc -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512 -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include   conftest.c >&5
configure:7756: $? = 0
configure:7757: result: yes
configure:7773: checking for the correct version of mpfr.h
configure:7791: aarch64-build_apple-darwin21.2.0-gcc -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512 -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include   conftest.c >&5
configure:7791: $? = 0
configure:7808: aarch64-build_apple-darwin21.2.0-gcc -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512 -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include   conftest.c >&5
configure:7808: $? = 0
configure:7809: result: yes
configure:7826: checking for the correct version of mpc.h
configure:7843: aarch64-build_apple-darwin21.2.0-gcc -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512 -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include   conftest.c >&5
configure:7843: $? = 0
configure:7859: aarch64-build_apple-darwin21.2.0-gcc -c -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512 -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include   conftest.c >&5
configure:7859: $? = 0
configure:7860: result: yes
configure:7878: checking for the correct version of the gmp/mpfr/mpc libraries
configure:7909: aarch64-build_apple-darwin21.2.0-gcc -o conftest -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512 -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include   -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/opt/homebrew/lib  -framework CoreFoundation -lstdc++ -lm conftest.c  -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -lmpc -lmpfr -lgmp >&5
configure:7909: $? = 0
configure:7910: result: yes
configure:8113: checking for isl 0.15 or later
configure:8126: aarch64-build_apple-darwin21.2.0-gcc -o conftest -O2 -g -pipe -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/opt/homebrew/include  -Qunused-arguments -fno-common -fbracket-depth=512 -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include -I/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/include   -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/opt/homebrew/lib  -framework CoreFoundation -lstdc++ -lm -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -lisl -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -L/Volumes/Toolchain/arm-none-eabi/build/arm-cortexm4f-eabi/buildtools/lib -lmpc -lmpfr -lgmp conftest.c  -lisl -lgmp >&5
configure:8126: $? = 0
configure:8133: result: yes
